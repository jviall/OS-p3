viall@cs.wisc.edu -- p2b Lottery Scheduler
README

I started by adding my two system calls in the same manner as with p1b. This worked until I actually had to implement them and retrieve the arguments from the stack, which I eventually learned how to do using argint() and argptr().

Once I implemented my system calls I made a helper function in proc.c to pass along elements of the ptable to my getpinfo() system call.

At this point things felt very straight forward. All I had to do was find an RNG to implement. The logic of choosing a process from there seemed quite obvious, for me, I went through every runnable process and compared its # of tickets with the lottery number, if it was greater than the lottery number I would decrement the lottery number by the processes tickets, and continue that method until the next process's tickets were less than or equal to the lottery number. 

From here, I got stuck for a long time on the fact that I was not break-ing after completing the scheduling lottery; this solved the bulk of my problems which were largely related to time-outs. In the end, the RNG portion was a lot more complicated than I thought. My initial RNG I think was more than capable of achieving the desired randomness, but I think it overcomplicated things. Eventually a TA pointed me into the right direction with an LCG RNG, as well as told me to type it as an unsigned long. I passed every test after fixing these pieces. 
